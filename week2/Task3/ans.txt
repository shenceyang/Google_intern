-Question:
Suppose you have a project where the content delivered to you is encoded in GBK because of a front-end error. 
But today's Internet delivery specifications are using the uniform UTF-8, then Try the following:
{"hello":"�������","count":16,"this":"that","price":106.959,"groups":[{"name":"Bob","a ge":"16"},{"name":"Alice","age":24}]}

It is correctly read and loaded into memory.If you find that it cannot be recovered, speculate on why this is the case.
Try to slove it.




-Why it happens?
When data is sent from one to another, it is encoded into bytes. The receiving system must use the same encoding standard to decode
these bytes back into characters. If the receiving system use a different encoding than the one used to encode the data. For example,
front-end use GBK and backend use UTF-8, then the byte who encoded by GBK will be incorrectly decoded at the backend by UTF-8. "�" 
indicates bytes that do not map to valid characters in the UTF-8 encoding.

-how to restore?
encoding_issue_solver.js